#!/usr/bin/env zsh

function alias_if_exists() {
  # Does the alias only if the aliased program is installed
    if command -v $2 > /dev/null; then
        alias "$1"="$2"
    fi
}

## Shortcuts

## cd and ls related....

alias dc="cd" ##avoid common typos

#auto append -l and -a to ls command
if command -v exa > /dev/null; then
  alias ls=exa
  alias l="exa -1"
  alias la="exa -a"
fi

## reverse of mv
vm () {
    mv $2 $1
}

## Git related
alias ga='git add'
alias gs='git status'
alias gp='git pull'
alias gg='git graph'

# unalias gd
alias gd='git diff'
alias gD='git ls-files'
alias gsp='git stash && git pull && git stash pop'

alias gco='git checkout'

# Note that gs is also ghostscript
alias ghostscript="/usr/local/bin/gs"

alias grepc="grep -P --color=always" #Color grep
alias printpath='echo $PATH | sed "s/:/\\n/g"'

alias clock='watch -n 0.1 "date +"%H:%M:%S" | toilet -f bigmono9"' # -f future

# Rename terminal Windows
  # $1 = type; 0 - both, 1 - tab, 2 - title
  # rest = text
setTerminalText () {
    local mode=$1 ; shift
    echo -ne "\033]$mode;$@\007"
}

stt_both  () { setTerminalText 0 $@; }
stt_tab   () { setTerminalText 1 $@; }
stt_title () { setTerminalText 2 $@; }

###########################################################################################################################

# SECRET ALIASES
if [ -f ~/.secret-aliases ]; then
    source ~/.secret-aliases
fi

# LOCAL ALIASES
if [ -f ~/.local-aliases ]; then
    source ~/.local-aliases
fi

###########################################################################################################################


function snd() {
    mkdir -p /tmp/passage
    /bin/cp $1 /tmp/passage
    /bin/rm /tmp/passage/last &>/dev/null || true
    echo $1 > /tmp/passage/last
}

function rcv() {
    file=$(cat /tmp/passage/last)
    /bin/cp -i "/tmp/passage/$file" $file
    /bin/rm "/tmp/passage/$file"
}

# Complete from google
function auto() {
    url='https://www.google.com/complete/search?client=hp&hl=en&xhr=t'
    # NB: user-agent must be specified to get back UTF-8 data!
    curl -H 'user-agent: Mozilla/5.0' -sSG --data-urlencode "q=$*" "$url" |
        jq -r ".[1][][0]" |
        sed 's,</\?b>,,g'
}

# OS dependent aliases
case "$(uname -s)" in

   Darwin)
     # 'Mac OS X'

     alias clear-dnscache="dscacheutil -flushcache && sudo killall -HUP mDNSResponder"
     alias bu="brew update && brew outdated | xargs brew upgrade  && brew cleanup -s --prune=0"

     alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome &"
     alias chromec="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary &"

     alias fuck='eval $(thefuck $(fc -ln -1)); history -r'
     alias readlink="greadlink"

     alias mvf='mv "$(pfs)"' # Move current finder selection

     # MacOS GNUs
     for i in awk cat chgrp chmod chown chroot cut date df du echo egrep env false fgrep find grep join kill link ln logname make mkdir mknod mktemp mv nice nohup paste perf printf pwd readlink realpath rm rmdir sed sort split tac tail tar tee test touch tr true truncate tty uniq unlink unzip uptime users who whoami yes zip; do
       alias_if_exists "$i" "g$i"
     done
     alias_if_exists "id" "/usr/local/bin/gid"
     alias_if_exists "rm" "/usr/local/bin/grm"
     alias_if_exists "mv" "/usr/local/bin/gmv"
     alias_if_exists "cp" "/usr/local/bin/gcp"
     # alias_if_exists "ls" "/usr/local/bin/gls"
     ;;

   Linux)
     # echo 'Linux'
     ;;

   CYGWIN*|MINGW32*|MSYS*)
     # echo 'MS Windows'
     ;;

   # Add here more strings to compare
   # See correspondence table at the bottom of this answer

   *)
    echo 'other OS'
     ;;
esac

# Shell dependent Alias (only zsh has global aliases)
#TODO: Add shell dependent aliases
case $SHELL in
*/zsh)
   # assume Zsh
   ;;
*/bash)
   # assume Bash
   ;;
*)
   # assume something else
   ;;
esac
